//斐波那契数列

public class Fib {  //算法
	public static int Fib1(int n){
		if(n<1) return -1;
		else if(n==1||n==2) return 1;
		else return Fib1(n-1)+Fib1(n-2);
	}
    public static int Fib2(int n){  //算法改进
        if(n<1) return -1;
        int[] a=new int[n+1];
        a[1]=1;a[2]=1;
        for(int i=3;i<=n;i++)
        	a[i]=a[i-1]+a[i-2];
        return a[n];
    }
    public static int Fib3(int n){  //二次改进
        int i,s1,s2;
        if(n<1) return -1;
        else if(n==1||n==2) return 1;
        s1=1;s2=1;
        for(i=3;i<=n;i++){
            s2=s1+s2;
            s1=s2-s1;
        }
        return s2;
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(Fib1(6));
		System.out.println(Fib2(6));
		System.out.println(Fib3(6));
	}

}
